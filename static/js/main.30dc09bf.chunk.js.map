{"version":3,"sources":["static/images/agent.svg","components/reflex-agent/reflex-agent.component.js","Navigation.js","App.js","index.js"],"names":["ReflexAgent","useState","location","stateA","stateB","states","setStates","counts","setCounts","isPlay","setIsPlay","logs","setLogs","useEffect","interval","setInterval","modifyCounts","action_result","reflex_agent","log","state","mProbability","doMess","Math","floor","random","stateMess","console","clearInterval","find","c","pos","newCounts","slice","swal","Container","Row","map","count","index","Col","sm","className","Badge","bg","Image","src","agent","InputGroup","Text","FormControl","value","readOnly","as","Button","variant","onClick","reduce","a","b","Navigation","Navbar","collapseOnSelect","expand","Brand","Toggle","Collapse","id","Nav","Link","href","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.30dc09bf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/agent.d513d5b7.svg\";","import React, { useEffect, useState } from 'react';\r\nimport agent from './../../static/images/agent.svg';\r\nimport { Container, Col, Row, Image, InputGroup, FormControl, Badge, Button } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\n\r\nimport './reflex-agent.css';\r\n\r\nexport const ReflexAgent = () => {\r\n    \r\n    const [states, setStates] = useState({\r\n        location: false, //false: A, true: B\r\n        stateA: true, //true: dirty, false: clean\r\n        stateB: true\r\n    });\r\n\r\n    const [counts, setCounts] = useState([0,0,0,0,0,0,0,0]);\r\n\r\n    const [isPlay, setIsPlay] = useState(false);\r\n\r\n    const [logs, setLogs] = useState('');\r\n\r\n    const { location, stateA, stateB } = states;\r\n\r\n    useEffect(() => {\r\n        \r\n        let interval = setInterval(() => {\r\n    \r\n            if(isPlay) {\r\n                modifyCounts(location,stateA,stateB)  \r\n                let state = !location? stateA: stateB;\r\n                let action_result = reflex_agent(location,state);\r\n                \r\n                let log = `Location: ${!location? 'A': 'B'} | Action: ${!action_result? 'CLEAN': action_result} \\n`;\r\n                setLogs(state => log+state)\r\n    \r\n                if(!action_result){\r\n                    if(!location) setStates(states => {return {...states, stateA: false}; });\r\n                    else setStates(states => {return {...states, stateB: false}});\r\n                }\r\n                else if(action_result === 'RIGHT')  setStates(states => {return {...states, location: true}});\r\n                else if(action_result === 'LEFT')   setStates(states => {return {...states, location: false}});\r\n            \r\n                let mProbability = (counts[3] + counts[7]) > (counts[0]+counts[4])? 2: 1; \r\n                let doMess = Math.floor((Math.random() * 1) + 2);\r\n                let stateMess = Math.floor((Math.random() * 10) + 1);\r\n                        \r\n                if(doMess > mProbability){\r\n                    switch(stateMess){\r\n                        case 1: case 2: case 3: case 4: //Ensucia A\r\n                            setLogs(state => `ENSUCIA A\\n`+state);\r\n                            setStates(states =>{ return {...states, stateA: true}});\r\n                            break;\r\n\r\n                        case 5: case 6: case 7: case 8: //Ensucia B\r\n                            setLogs(state => `ENSUCIA B\\n`+state);\r\n                            setStates(states =>{ return {...states, stateB: true}});\r\n                            break;\r\n\r\n                        case 9: case 10:\r\n                            console.log('ensucio ambos')\r\n                            setLogs(state => `ENSUCIA A y B\\n`+state);\r\n                            setStates(states =>{ return {...states, stateA: true, stateB: true}});\r\n                            break;\r\n\r\n                    }\r\n                }\r\n            }\r\n    \r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(interval);\r\n        }\r\n\r\n    },[states, isPlay])\r\n\r\n    const pause = () => { setIsPlay(false); }\r\n\r\n    const play = () => { setIsPlay(true); }\r\n\r\n    const restart = () => {\r\n        setCounts([0,0,0,0,0,0,0,0]);\r\n        setStates({\r\n            location: false,\r\n            stateA: true,\r\n            stateB: true\r\n        });\r\n        setLogs('');\r\n    }\r\n\r\n    const reflex_agent = (location,state) => {\r\n        if(state) return false;\r\n        else if (!location) return 'RIGHT';\r\n        else if (location) return 'LEFT';\r\n    }\r\n\r\n    const modifyCounts = (location,stateA,stateB) => {\r\n        if(counts.find(c => c<2) != null){\r\n            let pos = (4*location)+(2*stateA)+stateB;\r\n            const newCounts = counts.slice();\r\n            newCounts[pos] = newCounts[pos]+1;\r\n            setCounts(newCounts);\r\n        }\r\n        else {\r\n            setIsPlay(false);\r\n            swal(\"Completado\",\"\",\"success\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <br></br>\r\n\r\n            <Row>\r\n                {\r\n                    counts.map((count, index) => {\r\n                        return <Col sm={3} className=\"state\" key={index}>\r\n                                    <h2>Estado {index+1} - <Badge bg=\"danger\">{count}</Badge></h2>\r\n                                </Col>\r\n                    })\r\n                }\r\n            </Row>\r\n\r\n            <br></br>\r\n\r\n            <Row>\r\n                <Col sm={4} className={states.stateA? 'dirty': 'clean'}>\r\n                    <div className=\"room\">\r\n                        <h3>A</h3>\r\n                        {!states.location && <Image className=\"agent\" src={agent} />}\r\n                    </div>\r\n                </Col>\r\n\r\n                <Col sm={4} className={states.stateB? 'dirty': 'clean'}>\r\n                    <div className=\"room\">\r\n                        <h3>B</h3>\r\n                        {states.location && <Image className=\"agent\" src={agent} />}\r\n                    </div>\r\n                </Col>\r\n\r\n                <Col sm={4}>\r\n                    <Row>\r\n                        <InputGroup className=\"textarea\">\r\n                            <InputGroup.Text>Logs</InputGroup.Text>\r\n                            <FormControl value={logs} readOnly as=\"textarea\"/>\r\n                        </InputGroup>\r\n                    </Row>\r\n                    <br></br>\r\n                    <Row>\r\n                        <Col sm={4}>\r\n                            <div className=\"d-grid gap-2\">\r\n                                <Button variant=\"success\" onClick={play}>Play</Button>\r\n                            </div>\r\n                        </Col>\r\n                        <Col sm={4}>\r\n                            <div className=\"d-grid gap-2\">\r\n                                <Button variant=\"danger\" onClick={pause}>Pause</Button>\r\n                            </div>\r\n                        </Col>\r\n                        <Col sm={4}>\r\n                            <div className=\"d-grid gap-2\">\r\n                                <Button variant=\"primary\" onClick={restart}>Restart</Button>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                Total Pasos: { counts.reduce((a, b) => a + b, 0) }\r\n            </Row>\r\n\r\n        </Container>\r\n    )\r\n}\r\n","import { Navbar, Nav, Container } from 'react-bootstrap';\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <>\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                <Container>\r\n                    <Navbar.Brand>201602975</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"me-auto\">\r\n                        <Nav.Link href=\"/reflex-agent\">ReflexAgent</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import React from 'react'\nimport { Route, Switch } from 'react-router-dom';\nimport { ReflexAgent } from './components/reflex-agent/reflex-agent.component'\nimport Navigation from './Navigation';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst App = () => {\n  return (\n    <>       \n      <Navigation/>\n      <Switch>                \n          <Route path='/reflex-agent' component={ReflexAgent}/>       \n          <Route path='/' component={ReflexAgent}/>     \n      </Switch>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router} from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}